package jokengen.challenges.findTheError;

import jokengen.Player;
import jokengen.challenges.Challenge;

import java.util.Scanner;

public class FindTheError extends Challenge {

    private final Scanner scanner = new Scanner(System.in);

    public FindTheError(String name, Player player) {
        super(name, player);
    }

    private String getAnswer(){
        return scanner.next();
    }

    public void introduction(){
        System.out.println("*** ParabÈns participante do jokenGen *** "
                + "\nAgora vocÍ est· na terceira fase do jogo\n");
    }

    public void questionOne(){
        System.out.println("Quest√£o 1 - Criando uma vari√°vel num√©rica");
        System.out.println(
                "Selecione a op√ß√£o que mostra como podemos criar e definir o  valor de uma vari√°vel para representar a quantidade de dias de um m√™s?\n"
                        +"\n(a) int Dias;" + "\nDias => 31;\n"
                        +"\n(b) diasDoMes;" + "\ndiasDoMes = 30;\n"
                        +"\n(c) int diasDoMes;" + "\ndiasDoMes = 30;\n"
                        +"\n(d) int diasDoMes" + "\ndiasDoMes = 30\n");
        verifyQuestionOne(getAnswer());
    }

    private void verifyQuestionOne(String answer){
        if (answer.equalsIgnoreCase("c")) {
            super.getPlayer().addPoints(1);
            System.out.println("Resposta Correta! " + "voc√™ ganhou 1 ponto");
        }
        if(answer.equalsIgnoreCase("a")) {
            System.out.println("// Errado, para definir ou atribuir um valor a vari√°vel no java precisamos usar\r\n"
                    + "		'=' ao inv√©s de '=>' como no exemplo. O nome da vari√°vel 'Dias' n√£o d√° erro\r\n"
                    + "		 no compilador, mas temos que lembrar que n√£o √© a conven√ß√£o da comunidade\r\n"
                    + "		 Java. Vari√°veis normalmente s√£o iniciadas com letras min√∫sculas.\r\n"
                    + "		");
        }

        if (answer.equalsIgnoreCase("C")) {
            System.out.println("Errado, no java, por ser uma linguagem estaticamente tipada √© necess√°rio definir o tipo das vari√°veis. Faltou dizer que o tipo √© int.");
        }
        if (answer.equalsIgnoreCase("D")) {
            System.out.println("Errado, faltou o ponto e v√≠rgula neste caso");
        }
    }

    public void questionTwo(){
        System.out.println("\nQuest√£o 2");
        System.out.println(
                "Paulo Passivo, fez um c√≥digo para somar dois valores quaisquer." + "\n\nString parcela1 = \"10\";"
                        + "\nString parcela2 = \"20\";" + "\nSystem.out.println(parcela1 + parcela2);\n "
                        + "\nPaulo ter√° o resultado esperado (30) com este trecho de c√≥digo?"
                        + "\n(a) Sim, o resultado ser√° 30."
                        + "\n(b) Sim, por√©m o resultado ser√° \"30\" e n√£o 30."
                        + "\n(c) N√£o, pois n√£o podemos utilizar o sinal + neste caso."
                        + "\n(d) N√£o, o resultado ser√° 1020.\n");
        verifyQuestionTwo(getAnswer());

    }

    private void verifyQuestionTwo(String answer){
        if(answer.equalsIgnoreCase("a")) {
            System.out.println("Errado, veja que ele declarou como String, ent√£o o resultado ser√° concatenado.");
        }

        if(answer.equalsIgnoreCase("B")) {
            System.out.println("Errado, veja que ele declarou como String, ent√£o o resultado ser√° concatenado.");
        }

        if(answer.equalsIgnoreCase("C")) {
            System.out.println("N√£o ser√° 30 por√©m podemos usar o sinal + para concatenar.");
        }

        if(answer.equalsIgnoreCase("D")) {
            super.getPlayer().addPoints(1);
            System.out.println("Resposta Correta! " + "voc√™ ganhou 1 ponto");
            System.out.println("Correto. O resultado ser√° a concatena√ß√£o das duas parcelas. \n");
        }
    }

    public void questionThree(){
        System.out.println("\nQuest√£o 3 - Fixando o comando break");
        System.out.println(
                "L√©o est√° em d√∫vida sobre o modo como o break funciona quando utilizado dentro de la√ßos de repeti√ß√£o."
                        + "\nEscolha a op√ß√£o que descreve exatamente o funcionamento desse comando nessas situa√ß√µes.\n\n ");
        System.out.println("\n(a) Finaliza a execu√ß√£o do programa no momento em que √© chamado."
                + "\n(b) Para a execu√ß√£o do la√ßo mais interno que cont√©m o comando break e continua executando os la√ßos mais externos."
                + "\n(c) Para a execu√ß√£o de todos os la√ßos de repeti√ß√£o aninhados que o cont√©m e continua normalmente o programa.");
        verifyQuestionThree(getAnswer());

    }

    private void verifyQuestionThree(String answer){
        if(answer.equalsIgnoreCase("A")) {
            System.out.println("Errado‚Ä¶ O break n√£o interrompe todo o programa, apenas o mais interno que o cont√©m.");
        }

        if(answer.equalsIgnoreCase("B")) {
            super.getPlayer().addPoints(1);
            System.out.println("Resposta Correta! " + "voc√™ ganhou 1 ponto");
            System.out.println("Muito bem! O break ir√° interromper apenas o la√ßo de repeti√ß√£o mais interno que o cont√©m.");
        }
        ;
        if(answer.equalsIgnoreCase("C")){
            System.out.println("Errado‚Ä¶ O break n√£o interrompe todos os la√ßos de repeti√ß√£o, apenas o mais interno que o cont√©m.");
        }
    }

}
